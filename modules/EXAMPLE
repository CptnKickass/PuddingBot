#!/usr/bin/env bash

## Config
# Config options go here

## Source

# Check dependencies 
if [[ "$1" == "--dep-check" ]]; then
	depFail="0"
	# Dependencies go in this array
	# Dependencies already required by the controller script:
	# read fgrep egrep echo cut sed ps awk
	# Format is: deps=("foo" "bar")
	deps=()
	if [[ "${#deps[@]}" -ne "0" ]]; then
		for i in "${deps[@]}"; do
			if ! command -v ${i} > /dev/null 2>&1; then
				echo -e "Missing dependency \"${red}${i}${reset}\"! Exiting."
				depFail="1"
			fi
		done
	fi
	apiFail="0"
	# API keys required should go in this array
	# The value should be the variable name in api.conf
	# Format is: apis=("imgurApi" "youTubeApiKey")
	apis=()
	if [[ "${#apis[@]}" -ne "0" ]]; then
		for i in "${apis[@]}"; do
			val="$(egrep "^${i}" "api.conf")"
			val="${val#${i}=\"}"
			val="${val%\"}"
			if [[ -z "${val}" ]]; then
				echo -e "Missing api key \"${red}${i}${reset}\"! Exiting."
				apiFail="1"
			fi
		done
	fi
	if [[ "${depFail}" -eq "0" ]] && [[ "${apiFail}" -eq "0" ]]; then
		echo "ok"
		exit 0
	else
		exit 255
	fi
fi

# Hook should either be "Prefix" or "Format". Prefix will patch whatever
# the ${comPrefix} is, i.e. !command. Format will match a message specific
# format, i.e. the sed module.
modHook="Prefix"

# If the ${modHook} is "Format", what format should the message match to
# catch the script? This should be a regular expression pattern, mathing
# a regular channel PRIVMSG following the colon (It won't match a /ME)
# For example, if you wanted to match:
#  :goose!goose@goose PRIVMSG #GooseDen :s/foo/bar/
# Your ${modForm} would be:
#  modForm=("^.*PRIVMSG.*:s/.+/.+/$")
# If the ${modHook} is "Prefix", what command word should trigger the module?
# This is an array, so you can set as many hooks as you need.
modForm=("example")

# If you need your modForm to be case insensitive, answer yes. If not, answer
# no. This only applies for messages trigged by "Format" mode.
# If you're using "Prefix" mode, you can leave this blank.
modFormCase=""

# A one liner on how to use the module/what it does
modHelp="This module provides examples on how to write other modules"

# What flag should be required for the user to access this module? No
# error message will be sent if insufficient privs are found. This is
# where you can use the custom flags feature of a user's privs
modFlag="m"

# This is where the module source should start
# the message is passed as ${msgArr[@]}
# For reference, here's what the array items will be:
#
# 0                               1       2      3         4    5   6    7
# goose!goose@captain-kickass.net PRIVMSG #goose :!example here are some parameters
#
# If you want all the parameters: ${msgArr[@]:4}

echo "You typed !example, your complete message was: ${msgArr[@]}"
